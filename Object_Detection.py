# -*- coding: utf-8 -*-
"""Orangewoodsproject_Visiontask.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cb6wBnjNNErWnUBDpYMt0H-AVekB8Usj
"""



"""1. Are you adding any augmentations to the dataset. If yes, then which ones and why. If not, then why not?

answer: Yes, I am adding augmentations (set by augment=True). Augmentations make the model more flexible by slightly changing the images each time, so it learns to handle variations better.

2.How many epochs are you using for this dataset training?

answer: I am using 10 epochs, meaning the model will go through the whole dataset 10 times, which is usually enough for an initial run.


3.List any other hyperparameters you are specifying while training. Give reasoning for same

answer: I have set imgsz=720 (image size) and batch=8 (batch size). The image size of 720 helps capture detail for object detection, and a batch size of 8 is a balance between memory usage and training speed.

4.What output metrices are you analysing. Share concrete results from those

answer: I am looking at metrics like mAP (mean Average Precision) and validation loss. I use model.val() to check how well the model performs on validation data, and model.predict() to see its accuracy in detecting objects in new images.





"""

import locale

def set_utf8_locale():
  """Sets the locale to UTF-8."""
  # Try setting the locale to en_US.UTF-8
  try:
    locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')
    return
  except locale.Error:
    pass
  # Try setting the locale to C.UTF-8
  try:
    locale.setlocale(locale.LC_ALL, 'C.UTF-8')
  except locale.Error:
    # If setting to C.UTF-8 fails, raise a warning
    print("Warning: Could not set locale to UTF-8. "
          "Some functionality may be affected.")

import locale

def getpreferredencoding(do_setlocale = True):
    return "UTF-8"
locale.getpreferredencoding = getpreferredencoding
!pip install ultralytics
!pip install roboflow
!pip install wandb

import wandb

wandb.login()

wandb.init(project="Orangewoodsproject_Visiontask")

from google.colab import drive
drive.mount('/content/drive')

zip_path = '/content/drive/MyDrive/visiontaskyolov8.zip'

!unzip -q "/content/drive/MyDrive/visiontaskyolov8.zip" -d "/content/dataset"

!pip install ultralytics

from ultralytics import YOLO
model = YOLO("yolov8n.pt")

data_path = "/content/dataset/aquarium_pretrain/data.yaml"

model = YOLO("yolov8n.pt")
model.train(
    data=data_path, epochs=10, imgsz=720, batch=8, augment=True, project="Orangewoodsproject_Visiontask"
)

results = model.val(data='/content/dataset/aquarium_pretrain/data.yaml')

model.save("yolov8n_trained_final.pt")

from google.colab import files
files.download("yolov8n_trained_final.pt")

from google.colab import drive
drive.mount('/content/drive')

!cp yolov8n_trained_final.pt /content/drive/MyDrive/

results = model.predict("/content/Orangewoodsproject_Visiontask/image-3d-floor-underwater-world-260nw-1906385845.webp", save=True)